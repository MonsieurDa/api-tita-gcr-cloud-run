# This workflow will install Python dependencies, run tests and lint with a single version of Python
name: ml-api-to-gcr-cloud-run

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  python-env-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest
  
  build-push-gcr:
    needs: python-env-test
    name: Build and Push to GCP
    runs-on: ubuntu-latest

    # env variables
    env:
      IMAGE_NAME: docker-to-gcr-ar
      PROJECT_ID: docker-to-gcr-ar-340310
      SERVICE_NAME: docker-to-gcr-service 
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    # automating tags
    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts-shell/get_update.sh -v major

    # configure docker to use gcp to auth 
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        # plaste instructions here
        gcloud auth configure-docker \
        us-west2-docker.pkg.dev
      
    # push to gcr
    - name: Push Docker Image to Container Registry (GCR)
      env:
        #GIT_TAG: v0.1.0
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}

      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    # deploy to cloud run
    - name: Deploy
      run: |
        gcloud run deploy $SERVICE_NAME \
        --region europe-west1 \
        --image gcr.io/$PROJECT_ID/$IMAGE_NAME:latest \
        --platform managed \
        --allow-unauthenticated \
        --project $PROJECT_ID \

    - name: 'Use output'
      run: 'curl "${{ name.deploy.outputs.url }}"'    

